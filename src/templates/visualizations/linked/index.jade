extends ../../layout


block content

    .top.bar


    .documentation-container
        .row
            .column-3.hidden-mobile.overview-container
                - var section = 'linked'
                include ../../includes/visualizations/sidebar

            //- .column-1
            .column-3.hidden-mobile.empty-container
            .column-7.mobile-column-3.details-container
                header            
                    .row
                        .column-12
                            .row.header
                                .column-1.mobile-column-1
                                    img(src="/images/logo.png")

                                .column-10.mobile-column-3
                                    h1
                                        | Lightning

                                    | DATA VISUALIZATION SERVER


                section(name="introduction")
                    .row
                        .column-12
                                a(name="visualizations", href="#visualizations")
                                    h2
                                        | Visualizations
                



                section(name="linked")
                    .row
                        .column-12
                                a(name="linked", href="#linked")
                                    h2
                                        | Linked Visualizations




                                a(name="scatter-line", href="#scatter-line")
                                    h4
                                        | Scatter-Line

                                p
                                    | The scatter-line displays a line plot and a scatter plot simultaneously. Each point in the 
                                    | scatter plot has an associated array of points. By hovering on a point in the scatter plot,
                                    | the line updates to display the associated series. This data is fetched down from the lightning
                                    | server in real time to avoid overloading users with too much data up-front.


                                #scatter-line-iframe(data-url="http://lightning-docs.herokuapp.com/visualizations/162/pym", data-pym)
                                
                                .tab-container
                                    ul
                                        li
                                            a(href="#scatter-line-data-tab")
                                                | Data Structure
                                        li
                                            a(href="#scatter-line-python-tab")
                                                | Python Example

                                    .content-container

                                        #scatter-line-data-tab
                                            pre
                                                code.
                                                    {
                                                        "points": [[x0,y0], [x1,y1], ... ]
                                                        "series": [[0, 10, ...], [0, 20, ...], ...] or [0, 10, 20, â€¦]
                                                        "alpha": [0.2, 0.9, ...]
                                                        "color": [[r0,g0,b0], [10,20,0], ...]
                                                        "label": [l0, l1, ...]
                                                        "size": [s0, s1, ...]
                                                    }


                                        #scatter-line-python-tab

                                            pre
                                                code.
                                                    x = random.randn(20)
                                                    y = random.randn(20)
                                                    ts = gaussian_filter(random.rand(20,100), [0, 3])
                                                    s = std(ts, axis=1)*200
                                                    l = (random.rand(20)*5).astype('int')
                                                    
                                                    lgn.scatterline(x, y, ts, label=l, size=s)


                section(name="plots")
                    .row
                        .column-12
                                a(name="plots", href="/visualizations")
                                    h2
                                        | Plots
                                
                                a(href="/visualizations")
                                    h4
                                        | Click to view plot-based visualizations

                section(name="images")
                    .row
                        .column-12
                                a(name="images", href="/visualizations/images")
                                    h2
                                        | Images

                                a(href="/visualizations/images")
                                    h4
                                        | Click to view image-based visualizations


                section(name="3d")
                    .row
                        .column-12
                                a(name="3d", href="/visualizations/3d")
                                    h2
                                        | 3D

                                a(href="/visualizations/3d")
                                    h4
                                        | Click to view 3d visualizations
                
                section(name="streaming")
                    .row
                        .column-12
                                a(name="streaming", href="/visualizations/streaming")
                                    h2
                                        | Streaming

                                a(href="/visualizations/3d")
                                    h4
                                        | Click to view streaming visualizations

                                

    .bottom.bar.visible-mobile